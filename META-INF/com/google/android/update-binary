#!/sbin/sh
# Adreno Systemless Install Script: Recovery Flashable Zip
# osm0sis @ xda-developers

OUTFD=/proc/self/fd/$2;
ZIPFILE="$3";
DIR=`dirname "$3"`;

# Magisk boot mode support
ps | grep zygote | grep -v grep >/dev/null && BOOTMODE=true || BOOTMODE=false;
$BOOTMODE || ps -A 2>/dev/null | grep zygote | grep -v grep >/dev/null && BOOTMODE=true;
if $BOOTMODE; then
  OUTFD=/proc/self/fd/0;
  dev=/dev;
  if [ ! -f /data/magisk_merge.img ]; then
    /system/bin/make_ext4fs -l 64M /data/magisk_merge.img > /dev/null;
  fi;
fi;

ui_print() { $BOOTMODE && echo "$1" || echo -e "ui_print $1\nui_print" >> $OUTFD; }
show_progress() { echo "progress $1 $2" > $OUTFD; }
set_perm() {
  uid=$1; gid=$2; mod=$3;
  shift 3;
  chown $uid:$gid "$@" || chown $uid.$gid "$@";
  chmod $mod "$@";
}
set_perm_recursive() {
  uid=$1; gid=$2; dmod=$3; fmod=$4;
  shift 4;
  until [ ! "$1" ]; do
    chown -R $uid:$gid "$1" || chown -R $uid.$gid "$1";
    find "$1" -type d -exec chmod $dmod {} +;
    find "$1" -type f -exec chmod $fmod {} +;
    shift;
  done;
}
payload_size_check() {
  reqSizeM=0;
  for entry in $(unzip -l "$@" 2>/dev/null | tail -n +4 | awk '{ print $1 }'); do
    test $entry != "--------" && reqSizeM=$((reqSizeM + entry)) || break;
  done;
  test $reqSizeM -lt 1048576 && reqSizeM=1 || reqSizeM=$((reqSizeM / 1048576));
}
target_size_check() {
  curBlocks=`e2fsck -n $1 2>/dev/null | cut -d, -f3 | cut -d\  -f2`;
  curUsedM=$((`echo "$curBlocks" | cut -d/ -f1` * 4 / 1024));
  curSizeM=$((`echo "$curBlocks" | cut -d/ -f2` * 4 / 1024));
  curFreeM=$((curSizeM - curUsedM));
}
mount_su() {
  test ! -e $mnt && mkdir $mnt;
  mount -t ext4 -o rw,noatime $suimg $mnt;
  for i in 0 1 2 3 4 5 6 7; do
    case `mount` in
      *" $mnt "*) break;;
    esac;
    loop=/dev/block/loop$i;
    if [ ! -f "$loop" -o ! -b "$loop" ]; then
      mknod $loop b 7 $i;
    fi;
    losetup $loop $suimg && mount -t ext4 -o loop $loop $mnt;
  done;
}
abort() {
  ui_print " ";
  ui_print "Your system has not been changed.";
  ui_print " ";
  ui_print "Script will now exit...";
  ui_print " ";
  umount /data;
  umount /cache;
  exit 1;
}

ui_print " ";
ui_print "Adreno Systemless Installer Script";
ui_print "by osm0sis @ xda-developers";
ui_print " ";
modname=adreno-dev;
show_progress 1.34 2;

test ! -f "$DIR/Adreno-Nexus"*.zip && DIR=/sdcard;

# go local and find our target zip
cd "$DIR";
adreno=`ls Adreno-Nexus*.zip 2>/dev/null | head -n 1`;
if [ "$adreno" ]; then
  ui_print "Supplied package: $adreno";
else
  ui_print "Error: Adreno zip not detected!";
  abort;
fi;

ui_print " ";
ui_print "Mounting...";
mount /data;
mount /cache;
suimg=$(ls /data/magisk_merge.img || ls /data/su.img || ls /cache/su.img || ls /data/magisk.img || ls /cache/magisk.img) 2>/dev/null;
mnt=$dev/$(basename $suimg .img);
if [ "$suimg" ]; then
  mount_su;
  if [ ! -e /su/su.d/000adrenomount -a ! -e /magisk/adreno-dev/module.prop ]; then
    # make room for adreno which may not fit in su.img if there are other mods
    umount $mnt;
    payload_size_check "$DIR/$adreno" "system/*";
    target_size_check $suimg;
    if [ "$reqSizeM" -gt "$curFreeM" ]; then
      suNewSizeM=$((((reqSizeM + curUsedM) / 32 + 1) * 32));
      ui_print " ";
      ui_print 'Resizing su.img to '"$suNewSizeM"'M ...';
      e2fsck -yf $suimg;
      resize2fs $suimg "$suNewSizeM"M;
    fi;
    mount_su;
  fi;
  case $mnt in
    */magisk*) magisk=/$modname/system;;
  esac;
else
  ui_print " ";
  ui_print "Error: Systemless root not detected!";
  abort;
fi;

ui_print " ";
ui_print "Extracting files...";
mkdir -p $dev/tmp/$modname;
cd $dev/tmp/$modname;
unzip -o "$DIR/$adreno";
unzip -o "$ZIPFILE";

ui_print " ";
ui_print "Installing to $mnt$magisk/vendor ...";
mkdir -p $mnt$magisk;
cp -rf system/* $mnt$magisk;
set_perm_recursive 0 0 755 644 $mnt$magisk/vendor;
set_perm 0 2000 755 $mnt$magisk/vendor $mnt$magisk/vendor/firmware $mnt$magisk/vendor/lib $mnt$magisk/vendor/lib/egl;

if [ "$mnt" == "/su" ]; then
  ui_print " ";
  ui_print "Installing 000adrenomount script to /su/su.d ...";
  cp -rf su.d/* /su/su.d;
  set_perm 0 0 755 /su/su.d/000adrenomount;
elif [ "$magisk" ]; then
  ui_print " ";
  ui_print "Installing Magisk configuration files ...";
  adrenoname=$(basename "$adreno" .zip | cut -d- -f2-);
  sed -i "s/version=.*/version=${adrenoname}/g" module.prop;
  cp -f module.prop $mnt/$modname/;
  touch $mnt/$modname/auto_mount;
  chcon -hR 'u:object_r:system_file:s0' "$mnt/$modname";
  if $BOOTMODE; then
    mkdir -p /magisk/$modname;
    touch /magisk/$modname/update;
    cp -f module.prop /magisk/$modname/;
  fi;
fi;

ui_print " ";
ui_print "Unmounting...";
umount $mnt;
umount /data;
umount /cache;

cd /;
rm -rf /tmp/$modname /dev/tmp;
ui_print " ";
ui_print "Done!";
exit 0;

